name: 'SonarCloud Scan'

on:
  workflow_run:
    workflows: ['Test-CI']
    types:
      - completed
jobs:
  Process:
    runs-on: ubuntu-latest
    env:
      sonarProjectName: ${{ secrets.SONAR_PROJECT_KEY }}
      sonarProjectKey: ${{ secrets.SONAR_PROJECT_KEY }}
      sonarJavaBinaries: .
      sonarSource: .
      sonarInclusion: /src/main/**/*.java
      sonarExclusion: /*.zip,/*.jar,/*.html,/R.java,/build/,/target/,/.settings/,/.mvn/,/src/main/resources/static/bower_components/,/src/main/resources/static/jquery-validation/,/src/main/resources/static/scripts/material/,/src/main/resources/static/scripts/multiselect/,/src/main/resources/static/scripts/nanobar/,/src/main/resources/static/scripts/plugins/,/src/main/resources/static/scripts/utils/**
      sonarSkipTest: true
      sonarCoverageExclusion: '**/*.*'
    steps:
      - name: Checkout (Push)
        if: github.event.workflow_run.event == 'push'
        uses: actions/checkout@v2
      - name: Checkout (PR)
        if: github.event.workflow_run.event == 'pull_request'
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_commit.id }}
          fetch-depth: 0
      - name: Find PR
        if: github.event.workflow_run.event == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const prSearch = await github.rest.search.issuesAndPullRequests({
              q: "is:pr is:open sha:${{ github.event.workflow_run.head_commit.id }}"
            })
            const prNumber = prSearch.data.items[0].number
            const prInfo = await github.rest.pulls.get({
              pull_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            const pr = prInfo.data
            core.exportVariable('prBranch', pr.head.ref)
            core.exportVariable('prBase', pr.base.ref)
            core.exportVariable('prNumber', pr.number)
            core.exportVariable('prRepo', "${{ github.repository }}")
            core.exportVariable('endpoint', "https://api.github.com/")
            core.exportVariable('sonarVersion', "${{ steps.project.outputs.version }}")
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Extract Maven project version
        working-directory: archetype
        run: echo ::set-output name=pomVersion::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      - name: Build
        working-directory: archetype
        run: mvn install
      - name: Generation Test Project
        run: mvn archetype:generate -B -DarchetypeGroupId=com.atviettelsolutions -DarchetypeArtifactId=vts-kit-ms-template -DarchetypeVersion=${{steps.project.outputs.pomVersion}} -DgroupId=com.atviettelsolutions -DartifactId=vts-kit-ms-test -Dversion=${{steps.project.outputs.pomVersion}}
      - name: Build and analyze (PR)
        if: github.event.workflow_run.event == 'pull_request'
        working-directory: vts-kit-ms-test
        run: |
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.verbose=true \
              -Dsonar.log.level=TRACE \
              -Dsonar.scm.revision=${{ github.event.workflow_run.head_commit.id }} \
              -Dsonar.pullrequest.branch=${{ env.prBranch }} \
              -Dsonar.pullrequest.base=${{ env.prBase }} \
              -Dsonar.pullrequest.key=${{ env.prNumber }} \
              -Dsonar.projectName=${{ env.sonarProjectName }} \
              -Dsonar.projectKey=${{ env.sonarProjectName }} \
              -Dsonar.java.binaries=${{ env.sonarJavaBinaries }} \
              -Dsonar.sources=${{ env.sonarSource }} \
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
              -Dsonar.inclusions=${{ env.sonarInclusion }} \
              -Dsonar.exclusions=${{ env.sonarExclusion }} \
              -Dsonar.coverage.exclusions=${{ env.sonarCoverageExclusion }} \
              -Dmaven.test.skip=${{ env.sonarSkipTest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Build and analyze (Push)
        if: github.event.workflow_run.event == 'push'
        working-directory: vts-kit-ms-test
        run: |
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.verbose=true \
              -Dsonar.log.level=TRACE \
              -Dsonar.branch.name=${{ github.event.workflow_run.head_branch }} \
              -Dsonar.projectName=${{ env.sonarProjectName }} \
              -Dsonar.projectKey=${{ env.sonarProjectName }} \
              -Dsonar.java.binaries=${{ env.sonarJavaBinaries }} \
              -Dsonar.sources=${{ env.sonarSource }} \
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
              -Dsonar.inclusions=${{ env.sonarInclusion }} \
              -Dsonar.exclusions=${{ env.sonarExclusion }} \
              -Dsonar.coverage.exclusions=${{ env.sonarCoverageExclusion }} \
              -Dmaven.test.skip=${{ env.sonarSkipTest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
